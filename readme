For a set of 3 water jugs with A capacity of A, B and C liters, find the minimum number of operations performed before each jug collects x, y and z liters. Only the jug C can be completely filled. The operation can be any of the following: the jug is emptied, the jug is filled, or water is poured from one jug to another until one of the jugs becomes empty or full. For example, pitchers A, B and C with a capacity of 3, 5 and 8 liters, where pitchers A and B are empty at first, and C has a full 8 liters, require 2 operations to reach the state of 0, 3 and 5 liters in pitchers. Create a function that, given an array of jug capacities [A, B, C] and an array of target states [x, y, z], returns the minimum number of operations required to achieve the target state. If the entered data is invalid or there is no solution, return "No solution". The amount of water in a jug can never exceed the capacity of this jug. The total number of liters in the target state should be equal to the capacity of the jug C.
